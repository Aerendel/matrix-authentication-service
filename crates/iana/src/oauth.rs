// Copyright 2022 The Matrix.org Foundation C.I.C.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Enums from the "OAuth Parameters" IANA registry
//! See <https://www.iana.org/assignments/jose/jose.xhtml>
//!
//! Generated from:
//!  - <https://www.iana.org/assignments/oauth-parameters/token-type-hint.csv>
//!  - <https://www.iana.org/assignments/oauth-parameters/endpoint.csv>
//!  - <https://www.iana.org/assignments/oauth-parameters/token-endpoint-auth-method.csv>
//!  - <https://www.iana.org/assignments/oauth-parameters/pkce-code-challenge-method.csv>

// Do not edit this file manually

use schemars::JsonSchema;
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, Serialize, Deserialize, JsonSchema)]
pub enum OAuthTokenTypeHint {
    #[serde(rename = "access_token")]
    AccessToken,

    #[serde(rename = "refresh_token")]
    RefreshToken,

    #[serde(rename = "pct")]
    Pct,
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, Serialize, Deserialize, JsonSchema)]
pub enum OAuthAuthorizationEndpointResponseType {
    #[serde(rename = "code")]
    Code,

    #[serde(rename = "code id_token")]
    CodeIdToken,

    #[serde(rename = "code id_token token")]
    CodeIdTokenToken,

    #[serde(rename = "code token")]
    CodeToken,

    #[serde(rename = "id_token")]
    IdToken,

    #[serde(rename = "id_token token")]
    IdTokenToken,

    #[serde(rename = "none")]
    None,

    #[serde(rename = "token")]
    Token,
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, Serialize, Deserialize, JsonSchema)]
pub enum OAuthTokenEndpointAuthenticationMethod {
    #[serde(rename = "none")]
    None,

    #[serde(rename = "client_secret_post")]
    ClientSecretPost,

    #[serde(rename = "client_secret_basic")]
    ClientSecretBasic,

    #[serde(rename = "client_secret_jwt")]
    ClientSecretJwt,

    #[serde(rename = "private_key_jwt")]
    PrivateKeyJwt,

    #[serde(rename = "tls_client_auth")]
    TlsClientAuth,

    #[serde(rename = "self_signed_tls_client_auth")]
    SelfSignedTlsClientAuth,
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, Serialize, Deserialize, JsonSchema)]
pub enum PkceCodeChallengeMethod {
    #[serde(rename = "plain")]
    Plain,

    #[serde(rename = "S256")]
    S256,
}

